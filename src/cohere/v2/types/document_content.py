# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic

from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.unchecked_base_model import UncheckedBaseModel
from .document_content_document import DocumentContentDocument


class DocumentContent(UncheckedBaseModel):
    """
    Content block of the message that contains information about documents.
    """

    id: str
    document: DocumentContentDocument = pydantic.Field()
    """
    Relevant information that could be used by the model to generate a more accurate reply.
    The contents of each document are generally short (under 300 words), and are passed in the form of a
    dictionary of strings or a single string. If a single string is passed, it will be treated as the value for key "content".
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
