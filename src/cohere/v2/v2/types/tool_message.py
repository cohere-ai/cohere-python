# This file was auto-generated by Fern from our API Definition.

from ....core.unchecked_base_model import UncheckedBaseModel
import typing
import pydantic
from .tool_message_tool_content import ToolMessageToolContent
from ....core.pydantic_utilities import IS_PYDANTIC_V2


class ToolMessage(UncheckedBaseModel):
    """
    A message from the system.
    """

    role: typing.Literal["tool"] = "tool"
    tool_call_id: str = pydantic.Field()
    """
    The id of the associated tool call that has provided the given content
    """

    tool_content: ToolMessageToolContent = pydantic.Field()
    """
    A single or list of outputs from a tool. The content should formatted as a JSON object string, or a list of tool content blocks
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
