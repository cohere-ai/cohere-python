# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions

from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel, UnionMetadata
from .api_meta import ApiMeta
from .embed_by_type_response_embeddings import EmbedByTypeResponseEmbeddings


class EmbedResponse_EmbeddingsFloats(UncheckedBaseModel):
    id: str
    embeddings: typing.List[typing.List[float]]
    texts: typing.List[str]
    meta: typing.Optional[ApiMeta] = None
    response_type: typing.Literal["embeddings_floats"] = "embeddings_floats"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class EmbedResponse_EmbeddingsByType(UncheckedBaseModel):
    id: str
    embeddings: EmbedByTypeResponseEmbeddings
    texts: typing.List[str]
    meta: typing.Optional[ApiMeta] = None
    response_type: typing.Literal["embeddings_by_type"] = "embeddings_by_type"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


EmbedResponse = typing_extensions.Annotated[
    typing.Union[EmbedResponse_EmbeddingsFloats, EmbedResponse_EmbeddingsByType],
    UnionMetadata(discriminant="response_type"),
]
