# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import typing_extensions

from ..core.unchecked_base_model import UnionMetadata
from .generate_stream_end import GenerateStreamEnd
from .generate_stream_error import GenerateStreamError
from .generate_stream_text import GenerateStreamText


class GenerateStreamedResponse_TextGeneration(GenerateStreamText):
    event_type: typing.Literal["text-generation"] = "text-generation"

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True


class GenerateStreamedResponse_StreamEnd(GenerateStreamEnd):
    event_type: typing.Literal["stream-end"] = "stream-end"

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True


class GenerateStreamedResponse_StreamError(GenerateStreamError):
    event_type: typing.Literal["stream-error"] = "stream-error"

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True


GenerateStreamedResponse = typing_extensions.Annotated[
    typing.Union[
        GenerateStreamedResponse_TextGeneration,
        GenerateStreamedResponse_StreamEnd,
        GenerateStreamedResponse_StreamError,
    ],
    UnionMetadata(discriminant="event_type"),
]
