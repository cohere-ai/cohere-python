# This file was auto-generated by Fern from our API Definition.

from .generate_stream_event import GenerateStreamEvent
import pydantic
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class GenerateStreamText(GenerateStreamEvent):
    text: str = pydantic.Field()
    """
    A segment of text of the generation.
    """

    index: typing.Optional[int] = pydantic.Field(default=None)
    """
    Refers to the nth generation. Only present when `num_generations` is greater than zero, and only when text responses are being streamed.
    """

    is_finished: bool

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
