# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import pydantic_v1
from ..core.unchecked_base_model import UncheckedBaseModel


class ApiMetaBilledUnits(UncheckedBaseModel):
    input_tokens: typing.Optional[float] = pydantic_v1.Field(default=None)
    """
    The number of billed input tokens.
    """

    output_tokens: typing.Optional[float] = pydantic_v1.Field(default=None)
    """
    The number of billed output tokens.
    """

    search_units: typing.Optional[float] = pydantic_v1.Field(default=None)
    """
    The number of billed search units.
    """

    classifications: typing.Optional[float] = pydantic_v1.Field(default=None)
    """
    The number of billed classifications units.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
