name: Python Release

on:
  push:
    tags:
      - v*

env:
  DIST_DIR: ${{ github.sha }}
  SERVICE_ACCOUNT_NAME: ${{ secrets.TOKENIZER_SERVICE_ACCOUNT_NAME }}
  SERVICE_ACCOUNT_KEY: ${{ secrets.TOKENIZER_SERVICE_ACCOUNT_KEY }}
  PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
  PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  GCLOUD_PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}

jobs:
  create_wheels_manylinux:
    runs-on: ubuntu-latest
    name: Create wheels for manylinux2014
    container: quay.io/pypa/manylinux2014_x86_64
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: yum install -y openssl-devel

      - name: ✍️ auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.TOKENIZER_SERVICE_ACCOUNT_KEY }}

      - name: ⤵️ gcloud setup
        uses: google-github-actions/setup-gcloud@v0

      - name: Build and audit wheels
        working-directory: ./
        run: sh ./scripts/build-wheels.sh

  # create_wheels_windows_32bit:
  #   name: Create wheels for windows 32-bit
  #   runs-on: windows-latest
  #   strategy:
  #     matrix:
  #       python: ["3,6", "3.7", "3.8", "3.9", "3.10"]
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Install Python
  #       uses: actions/setup-python@v1
  #       with:
  #         python-version: ${{ matrix.python }}
  #         architecture: x86

  #     - name: Install dependencies
  #       run: |
  #         # On old versions of python there is an old version of setuptools already installed
  #         pip install setuptools wheel --ignore-installed --force-reinstall

  #     - name: Build wheel
  #       working-directory: ./
  #       run: python setup.py bdist_wheel

  #     - name: ✍️ auth
  #       uses: google-github-actions/auth@v0
  #       with:
  #         credentials_json: ${{ secrets.TOKENIZER_SERVICE_ACCOUNT_KEY }}

  #     - name: ⤵️ gcloud setup
  #       uses: google-github-actions/setup-gcloud@v0

  #     - name: Upload wheels
  #       run: gsutil cp -r ./dist "gs://cohere-tokenizer-releases/$DIST_DIR"

  # create_wheels_others_64bit:
  #   name: Create wheels for other OSes
  #   env:
  #     MACOSX_DEPLOYMENT_TARGET: 10.11
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [windows-latest, macos-10.15]
  #       python: ["3.6", "3.7", "3.8", "3.9", "3.10"]
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Install Go
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: '1.17.6'

  #     - name: Install Python
  #       uses: actions/setup-python@v1
  #       with:
  #         python-version: ${{ matrix.python }}
  #         architecture: x64

  #     - name: Install Python dependencies
  #       run: |
  #         # On old versions of python there is an old version of setuptools already installed
  #         pip install setuptools wheel pybindgen --ignore-installed --force-reinstall

  #     - name: Install Go dependencies
  #       run: |
  #         go get golang.org/x/tools/cmd/goimports
  #         go get github.com/go-python/gopy

  #     - name: Generate gopy Files
  #       run: |
  #         gopy build -output=tokenizer -vm=python3 github.com/cohere-ai/tokenizer

  #     - name: Build wheel
  #       working-directory: ./
  #       run: python setup.py bdist_wheel

  #     - name: Rename wheels
  #       shell: bash
  #       working-directory: ./dist
  #       run: for file in *.whl ; do mv $file ${file//macosx_10_1[0-9]/macosx_10_11} ; done

  #     - name: Upload wheels
  #       shell: bash
  #       run: |
  #         pip install awscli
  #         aws s3 sync --exact-timestamps ./bindings/python/dist "s3://tokenizers-releases/python/$DIST_DIR"

  upload_package:
    name: Upload package to PyPi
    runs-on: ubuntu-latest
    needs:
      - create_wheels_manylinux
      # - create_wheels_windows_32bit
      # - create_wheels_others_64bit

    steps:
      - uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v1

      - name: ✍️ auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.TOKENIZER_SERVICE_ACCOUNT_KEY }}

      - name: ⤵️ gcloud setup
        uses: google-github-actions/setup-gcloud@v0

      - name: Install dependencies
        run: |
          pip install setuptools wheel

      - name: Create source distribution
        working-directory: ./
        run: sh ./scripts/build-sdist.sh

      - name: Retrieve all wheels
        run: gsutil cp -r "gs://cohere-tokenizer-releases/$DIST_DIR/*" ./dist

      - name: Upload to PyPi
        working-directory: ./
        run: |
          pip install twine
          python -m twine upload --repository testpypi dist/* -u "$PYPI_USERNAME" -p "$PYPI_PASSWORD"
